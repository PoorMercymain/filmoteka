basePath: /
definitions:
  domain.Actor:
    properties:
      birthday:
        example: "2001-10-25"
        type: string
      gender:
        example: male
        type: string
      name:
        example: Vasily Abcd
        type: string
    type: object
  domain.AuthorizationData:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  domain.Film:
    properties:
      actorIDs:
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
      description:
        example: some kind of film
        type: string
      rating:
        example: 8.6
        type: number
      releaseDate:
        example: "2007-09-20"
        type: string
      title:
        example: film 2
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управления базой данных фильмов
  title: Filmoteka API
  version: "1.1"
paths:
  /actor:
    post:
      consumes:
      - application/json
      description: Запрос для добавления информации об актере в БД
      parameters:
      - description: информация об актере
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Actor'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Запрос добавления актера в БД
      tags:
      - Actors
  /actor/{id}:
    delete:
      consumes:
      - application/json
      description: Запрос для удаления информации об актере из БД
      parameters:
      - description: id актера
        example: 1
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Запрос удаления актера из БД
      tags:
      - Actors
    put:
      consumes:
      - application/json
      description: Запрос для обновления информации об актере в БД, как полностью,
        так и частичного
      parameters:
      - description: информация об актере
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Actor'
      - description: id актера
        example: 1
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Запрос обновления актера в БД
      tags:
      - Actors
  /actors:
    get:
      description: Запрос для получения списка актеров из БД, для каждого актера также
        выводится список фильмов с его участием, предусмотрена пагинация
      parameters:
      - description: номер страницы, начинается с 1 (по умолчанию 1)
        example: 1
        in: query
        name: page
        type: integer
      - description: максимальное число актеров на странице, в диапазоне [1, 100]
          (по умолчанию 15)
        example: 1
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Запрос получения списка актеров из БД
      tags:
      - Actors
  /film:
    post:
      consumes:
      - application/json
      description: Запрос для добавления информации о фильме в БД
      parameters:
      - description: информация о фильме
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Film'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Запрос добавления информации о фильме в БД
      tags:
      - Films
  /film/{id}:
    delete:
      description: Запрос для удаления информации о фильме из БД
      parameters:
      - description: информация о фильме
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Film'
      - description: id фильма
        example: 1
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Запрос удаления фильма из БД
      tags:
      - Films
    put:
      consumes:
      - application/json
      description: Запрос для обновления информации о фильме, как полного, так и частичного
      parameters:
      - description: информация о фильме
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Film'
      - description: id фильма
        example: 1
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Запрос обновления информации о фильме
      tags:
      - Films
  /films:
    get:
      description: Запрос для получения списка фильмов из БД, для каждого фильма также
        выводится список фильмов с его участием, предусмотрена пагинация, по умолчанию
        сортируется по убыванию рейтинга
      parameters:
      - description: поле для сортировки (release_date, rating, title, по умолчанию
          - rating)
        example: title
        in: query
        name: field
        type: string
      - description: поле для порядка сортировки (desc - по убыванию, asc - по возрастанию,
          по умолчанию - desc)
        example: desc
        in: query
        name: order
        type: string
      - description: номер страницы, начинается с 1 (по умолчанию 1)
        example: 1
        in: query
        name: page
        type: integer
      - description: максимальное число актеров на странице, в диапазоне [1, 100]
          (по умолчанию 15)
        example: 1
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Запрос получения списка фильмов из БД
      tags:
      - Films
  /films/search:
    get:
      description: Запрос для поиска фильмов в БД по фрагменту названия фильма и/или
        имени актера, по умолчанию выдает 1 самый подходящий фильм, для успешного
        запроса надо указать хотя бы один из фрагментов
      parameters:
      - description: фрагмент названия фильма для поиска
        example: film
        in: query
        name: title
        type: string
      - description: фрагмент имени актера для поиска
        example: Val
        in: query
        name: order
        type: string
      - description: номер страницы, начинается с 1 (по умолчанию 1)
        example: 1
        in: query
        name: page
        type: integer
      - description: максимальное число актеров на странице, в диапазоне [1, 100]
          (по умолчанию 1)
        example: 1
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Запрос поиска фильмов в БД
      tags:
      - Films
  /login:
    post:
      consumes:
      - application/json
      description: Запрос для получения JWT в Cookie и теле ответа
      parameters:
      - description: аутентификационные данные
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.AuthorizationData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Запрос получения токена для авторизации
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Запрос для регистрации в сервисе, производится регистрация обычного
        пользователя (если нужен админ, надо задать соответствующее поле в БД в таблице
        auth) и выдается JWT (можно указать в заголовке Authorization) на 24 часа
        (также записывается в Cookie)
      parameters:
      - description: аутентификационные данные
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.AuthorizationData'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Запрос регистрации в filmoteka
      tags:
      - Auth
schemes:
- http
swagger: "2.0"
tags:
- description: Группа запросов для управления списком актеров
  name: Actors
- description: Группа запросов для управления списком фильмов
  name: Films
- description: Группа запросов для авторизации
  name: Auth
